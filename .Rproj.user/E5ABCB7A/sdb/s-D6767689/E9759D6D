{
    "contents" : "---\ntitle: \"Reproducible Research: Peer Assessment 1\"\noutput: \n  html_document:\n    keep_md: true\n---\n\n\n## Loading and preprocessing the data\n\nthe below methods loads the CSV file from the activity zip file\nand trasforms the date fild into Date\n```{r echo=TRUE}\nreadData <- function() {\n    #source file name\n    fileName <- \"activity.zip\"\n    #get path of temporary directory\n    tmpDir <- tempdir()\n    #extract CSV file name from Zip file\n    csvFileName <- unzip(fileName,list=TRUE)$Name[1]\n    #unzip csv file into temporary direct\n    unzip(fileName, file=csvFileName, exdir = tmpDir, overwrite = TRUE)\n    #get full path of CSV file\n    csvFullPath <- file.path(tmpDir, csvFileName)\n    #read CSV file\n    data <- read.csv(csvFullPath)\n    #transform date column into Date\n    data$date <- as.Date(data$date)\n    #return value\n    data\n}\n```\nThe function's return values will be sotred in a variable named \"data\"\n\n```{r echo=TRUE}\ndata <- readData()\n```\n\n\n## What is mean total number of steps taken per day?\n\nI've used tapply to calculate total daily steps\n\n```{r echo=TRUE}\ndaily_totals <- tapply(data$steps, data$date, sum, na.rm=TRUE)\n```\n\n\n\n```{r echo=TRUE}\n##Below code block generates a histogram of daily step\nhist(daily_totals, xlab=\"Total Daily Steps\", ylab=\"Frequency\", main=\"Total number of steps taken each day\")\n```\n\n```{r echo=TRUE}\n##mean and median  daily steps were calculated from the daily_totals variable\nmean(daily_totals)\nmedian(daily_totals)\n```\n\n## What is the average daily activity pattern?\n\nBelow plot shows average daily step count by time segments\n```{r echo = TRUE}\n#will be used for string padding\nlibrary(stringr)\n#calculate total number of steps per time segment divided by the unique number of days. this to overcome missing values\naverage_daily_pattern <- tapply(data$steps, data$interval, sum, na.rm=TRUE) / length(unique(data$date))\n#create a time vector for x axis\nhours <- paste(str_pad(1:23, 2, pad='0'), ':00', sep='')\n#plot\nplot(average_daily_pattern, type=\"l\", xaxt='n', xlab='', ylab='Average Step Count', main='Average Daily Step Count')\n#add x axis\naxis(side = 1, at=((0:22) * 12.5) + 5,labels = hours, las=2)\n```\nBlow is calculation and representation of most active daily time segment\n```{r echo = TRUE}\n#extract interval having max average daily step count\nmaxStepTime <- names(average_daily_pattern)[average_daily_pattern == max(average_daily_pattern)]\n#format time\nmaxStepTime <- paste(str_pad(as.integer(as.integer(maxStepTime) / 100), 2, pad='0'), str_pad(as.integer(as.integer(maxStepTime) %% 100), width=2, pad='0'), sep=':')\nmaxStepTime\n```\n\n\n## Imputing missing values\n\nTotal number of NAs in dataset\n```{r echo=TRUE}\nis_na = sum(is.na(data))\nis_na\n```\n\nHandling NAs:\nI would have replaced all missing values with the median step count for time segment\n\nBelow code block creates a new data set that is equals to the original one but all NAs are replaced with the median number of steps per interval\n```{r echo=TRUE}\n#Generate a dataframe holding the median number of steps per interval\nmedValues <- as.data.frame(cbind(interval = unique(data$interval), steps = tapply(data$steps, data$interval, median, na.rm=T)))\n#generate new data set\ndataNoNA<- rbind(\n    #all non na\n    data[is.na(data$steps) == F, ],\n    #all na values replaced by their median\n    merge(medValues, data[is.na(data$steps) == T, 2:3], by.x =\"interval\", by.y = \"interval\")[, c(2, 3, 1)]\n)\n```\n\nCalculate the daily totals from the dataNoNA varaible and display an histogram\n```{r echo=TRUE}\ndaily_totals_no_na <- tapply(dataNoNA$steps, dataNoNA$date, sum)\n##Below code block generates a histogram of daily step\nhist(daily_totals_no_na, xlab=\"Total Daily Steps\", ylab=\"Frequency\", main=\"Total number of steps taken each day\")\n```\n\n\n```{r echo=TRUE}\n##Calculate and report the mean and median total number of steps taken per day. Do these values differ from the estimates from the first part of the assignment?\nmean_median <- data.frame(mean = c(mean(daily_totals_no_na), mean(daily_totals)), median = c(median(daily_totals_no_na), median(daily_totals)))\nrownames(mean_median) <- c('NA as median', 'Original Data')\nmean_median\n```\nThere is no real difference from the estimates in  the first part of assignemnt\n\n\n###What is the impact of imputing missing data on the estimates of the total daily number of steps?\nThe histogram shape has not changed. it seems like the frequencies went a litle higher than before.\nIt seems like we could just ignore the NA observations.\n\n## Are there differences in activity patterns between weekdays and weekends?\n```{r echo=TRUE}\n#add a weekday / weekend column\ndataByWeekdayWeekEnd <- cbind(data, c(\"weekday\", \"weekend\")[as.numeric(weekdays(data$date) %in% c(\"Sunday\", \"Saturday\")) +\n1])\nnames(dataByWeekdayWeekEnd)[4] <- \"day\"\n\nlibrary(reshape2)\n#group and melt results\nstepsByWeekdayDay <- melt(tapply(dataByWeekdayWeekEnd$steps, list(dataByWeekdayWeekEnd$day, dataByWeekdayWeekEnd$interval), mean, na.rm=T))\n\n#set names\nnames(stepsByWeekdayDay) <- c(\"day\", \"interval\", \"steps\")\n\n#plot\nlibrary(\"lattice\")\nplot <- xyplot(steps ~ interval | factor(day), data=stepsByWeekdayDay, \n       type = 'l',\n       main=\"Average Number of Steps Taken \\n bY Weekday Days / Weekend Days\",\n       xlab=\"5 Minute Intervals\",\n       ylab=\"Average Number of Steps Taken\",\n       layout=(c(1,2)))\nprint (plot) \n```\n\n",
    "created" : 1454364301619.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1852238778",
    "id" : "E9759D6D",
    "lastKnownWriteTime" : 1454663917,
    "path" : "~/Didi/Coursera/Reporoduceable/Week1/Project/RepData_PeerAssessment1/PA1_template.Rmd",
    "project_path" : "PA1_template.Rmd",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_markdown"
}